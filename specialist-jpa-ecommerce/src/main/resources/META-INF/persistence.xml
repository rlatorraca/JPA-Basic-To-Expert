<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd"
             version="2.2">
             
    <!-- Configuracoes para UM determinado DB -->
    <persistence-unit name="Ecommerce-PU">
    	

    	<mapping-file>META-INF/consultas/categoria.xml</mapping-file>    	
    	<mapping-file>META-INF/consultas/pedido.xml</mapping-file>
    	<mapping-file>META-INF/consultas/produto.xml</mapping-file>
    	
    	<!--AUTO = Se o Hibernate Validation estiver no PATH (Libraries/ POM.XML) esssa tag serve para mostra ao DB sera necessaria a validacao Hibernate (BEAN VALIDATION) antes de SALVAR, 
    	           caso nao esteja no PATH (nao for um library / POM.xml) nao utilizara o Hibernate Validation (Bean Validation)-->
    	<!-- CALLBACK = obrigado a implementacao no PATH(library / POM.xml)  -->
    	<!-- NONE = sem validacao -->
    	<validation-mode>CALLBACK</validation-mode>

    	
    	<properties>

		
        
        <!-- STREAM de conexao -->
        <!-- 'createDatabaseIfNotExist=true' >>>  se nao existir cria o DB -->
        <!-- '&amp;useTimezone=true&amp;serverTimezone=UTC' >>> apenas para o WINDOWS -->
            <property name="javax.persistence.jdbc.url"
                      value="jdbc:mysql://localhost/rlsp_ecommerce?createDatabaseIfNotExist=true&amp;useTimezone=true&amp;serverTimezone=UTC" />
         
         <!-- USUARIO + PASSWORD + DRIVER para conectar o DB --> 
            <property name="javax.persistence.jdbc.user" value="root" />            
            <property name="javax.persistence.jdbc.password" value="123" />            
            <property name="javax.persistence.jdbc.driver" value="com.mysql.cj.jdbc.Driver" />

          <!-- PROPRIEDADES DO JPA -->
          <!-- Usada para fase de DESENVOLVIIMENTO e TESTES -->          
		          
		          <!--  ** value="none" : desabilita a geracao do DB, e  nao executara tbem name="javax.persistence.sql-load-script-source" -->
		          <!--  ** value="drop" : apenas envia ao DB os comandos de DROP / REMOCAO , e  nao executara tbem name="javax.persistence.sql-load-script-source" -->
		          <!--  ** value="create" : apenas envia ao DB os comandos de CREATE / CRIACAO -->
		          <!--  ** value = "drop-and-create" : Dropa e Cria as tabelas do DB-->
		          <!-- DELETA e RECRIA o DB toda vez que o JPA REINICIAR/INICIAR --> 
		            <!--  <property name="javax.persistence.schema-generation.database.action" value="drop-and-create"/> -->
		            <property name="javax.persistence.schema-generation.database.action" value="none"/> 
		        
		            
		           <!-- Gerando o schema do banco com METADADOS (JPA) e scripts -->
		           <!-- Possiveis valores: a) metadate;  b) script; c) metadata-then-script; d) script-then-script -->
            		<property name="javax.persistence.schema-generation.drop-source" value="metadata-then-script"/>
		            <property name="javax.persistence.schema-generation.create-source" value="metadata-then-script"/>

		           
		          
		          <!-- Usa esses scripts para gerar o DB e nao as entidades -->
		          <!-- UPrecisa 1ยบ usar o DROP e depois o CREATE na propriedade ==>  name="javax.persistence.schema-generation.database.action" -->
		          
            		<property name="javax.persistence.schema-generation.drop-script-source" value="META-INF/banco-de-dados/script-remocao.sql"/>		            
		            <property name="javax.persistence.schema-generation.create-script-source" value="META-INF/banco-de-dados/script-criacao.sql"/>            		
            	  <!-- DADOS iniciais quando recriada o DB -->  
		            <property name="javax.persistence.sql-load-script-source" value="META-INF/banco-de-dados/dados-iniciais.sql"/>
            		
            	 <!-- EXPORTANDO os SCRIPTS de schema generation para arquivos externos -->
            	 <!-- Possiveis os seguintes valores: a) none ( para nao exportart; b) drop (exportar apenas o drop); 
            	 		c) create (exportar apenas o create); d) drop-and-create (exportar ambos)
            	 	<property name="javax.persistence.schema-generation.scripts.action" value="none"/>
            		<property name="javax.persistence.schema-generation.scripts.create-target" value="/home/rlatorraca/Downloads/script-criacao-exportado.sql"/>
            		<property name="javax.persistence.schema-generation.scripts.drop-target"   value="/home/rlatorraca/Downloads/script-remocao-exportado.sql"/>
				 -->
				 
				  <!-- Mostra o SQL construido no CONSOLE -->
		            <property name="hibernate.show_sql" value="true" />
		          <!-- Formato o SQL construido para melhor Leitura -->  
		            <property name="hibernate.format_sql" value="true" />
        
        <!-- SEMPRE USADA (Desenvolvimento e PRODUCAO -->
			      <!-- Fala pro JPA o dialeto (DB) que sera usado -->
			         <property name="hibernate.dialect" value="org.hibernate.dialect.MySQL8Dialect" />
        
        </properties>
    </persistence-unit>
</persistence>